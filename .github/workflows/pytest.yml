name: Pyanodon Tests

on:
  workflow_dispatch:
  workflow_call:

jobs:
  genereate_matrix:
    name: "Generate strategy matrix"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.TESTUSER_TOKEN }}
      - id: set-matrix
        run: cat <(echo -n "::set-output name=matrix::") <(jq -c <mod-sets.json)
  run_tests:
    name: ${{ matrix.name }}
    needs: genereate_matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.genereate_matrix.outputs.matrix)}}
    steps:
      - name: "Checkout pyanodontests"
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout stdlib"
        uses: actions/checkout@v2
        with:
          repository: "Afforess/Factorio-Stdlib"
          ref: v1.4.6
          path: "factorio/mods/stdlib"
      - name: "Checkout pycoalprocessing"
        if: ${{ matrix.pycoalprocessing }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pycoalprocessing"
          path: "factorio/mods/pycoalprocessing"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pycoalprocessinggraphics"
        if: ${{ matrix.pycoalprocessing }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pycoalprocessinggraphics"
          path: "factorio/mods/pycoalprocessinggraphics"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyindustry"
        if: ${{ matrix.pyindustry }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyindustry"
          path: "factorio/mods/pyindustry"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyfusionenergy"
        if: ${{ matrix.pyfusionenergy }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyfusionenergy"
          path: "factorio/mods/pyfusionenergy"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyfusionenergygraphics"
        if: ${{ matrix.pyfusionenergy }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyfusionenergygraphics"
          path: "factorio/mods/pyfusionenergygraphics"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyhightech"
        if: ${{ matrix.pyhightech }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyhightech"
          path: "factorio/mods/pyhightech"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyhightechgraphics"
        if: ${{ matrix.pyhightech }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyhightechgraphics"
          path: "factorio/mods/pyhightechgraphics"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyrawores"
        if: ${{ matrix.pyrawores }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyrawores"
          path: "factorio/mods/pyrawores"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyraworesgraphics"
        if: ${{ matrix.pyrawores }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyraworesgraphics"
          path: "factorio/mods/pyraworesgraphics"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pypetroleumhandling"
        if: ${{ matrix.pypetroleumhandling }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pypetroleumhandling"
          path: "factorio/mods/pypetroleumhandling"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pypetroleumhandlinggraphics"
        if: ${{ matrix.pypetroleumhandling }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pypetroleumhandlinggraphics"
          path: "factorio/mods/pypetroleumhandlinggraphics"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyalienlife"
        if: ${{ matrix.pyalienlife }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyalienlife"
          path: "factorio/mods/pyalienlife"
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyalienlifegraphics1"
        if: ${{ matrix.pyalienlife }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyalienlifegraphics1"
          path: "factorio/mods/pyalienlifegraphics"   #Mod name doesn't have 1 at the end
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyalienlifegraphics2"
        if: ${{ matrix.pyalienlife }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyalienlifegraphics2"
          path: "factorio/mods/pyalienlifegraphics2"   
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyalienlifegraphics3"
        if: ${{ matrix.pyalienlife }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyalienlifegraphics3"
          path: "factorio/mods/pyalienlifegraphics3"   
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyalternativeenergy"
        if: ${{ matrix.pyalternativeenergy }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyalternativeenergy"
          path: "factorio/mods/pyalternativeenergy"   
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "Checkout pyalternativeenergygraphics"
        if: ${{ matrix.pyalternativeenergy }}
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyalternativeenergygraphics"
          path: "factorio/mods/pyalternativeenergygraphics"   
          token: ${{ secrets.TESTUSER_TOKEN }}
      - name: "TEST: Load Factorio"
        uses: ShadowGlass0/factorio-docker-for-github-actions@main
