name: Pyanodon Tests

on:
  workflow_call:
    inputs:
      repository:
        type: string
        description: "Caller repository"
        required: false
        default: ""
      ref:
        type: string
        description: "Ref/sha to use for the caller repository"
        required: false
        default: ""
      test_ref:
        type: string
        description: "Ref/sha to use for pyanodontest"
        required: false
        default: "v1"
    secrets:
      token:
        description: "Token for pyanodontestuser"
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.token }}
  EVENT_REPOSITORY: ${{ inputs.repository }}
  EVENT_REF: ${{ inputs.ref }}

jobs:
  genereate_matrix:
    name: "Generate strategy matrix"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyanodontests"
          token: ${{ secrets.token }}
          ref: ${{ inputs.test_ref }}
      - id: set-matrix
        run: ./getrefs.sh
  load_test:
    name: ${{ format('Load {0}', matrix.name) }}
    needs: genereate_matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.genereate_matrix.outputs.matrix) }}
    steps:
      - name: "Checkout pyanodontests"
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyanodontests"
          token: ${{ secrets.token }}
          ref: ${{ inputs.test_ref }}
      - name: "Checkout stdlib"
        uses: actions/checkout@v2
        with:
          repository: "Afforess/Factorio-Stdlib"
          ref: v1.4.6
          path: "factorio/mods/stdlib"
      - name: "Checkout mods"
        uses: ShadowGlass0/multi-checkout@v2
        with:
          repositories: ${{ toJSON(matrix.mods) }}
          token: ${{ secrets.token }}
      - name: "Move mods"
        run: ./movemods.sh
      - name: "TEST: Load Factorio"
        uses: ShadowGlass0/factorio-docker-for-github-actions@main
  techtree_test:
    name: ${{ format('TechTree {0}', matrix.name) }}
    needs: [genereate_matrix, load_test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.genereate_matrix.outputs.matrix) }}
    steps:
      - name: "Checkout pyanodontests"
        uses: actions/checkout@v2
        with:
          repository: "pyanodon/pyanodontests"
          token: ${{ secrets.token }}
          ref: ${{ inputs.test_ref }}
      - name: "Checkout stdlib"
        uses: actions/checkout@v2
        with:
          repository: "Afforess/Factorio-Stdlib"
          ref: v1.4.6
          path: "factorio/mods/stdlib"
      - name: "Checkout mods"
        uses: ShadowGlass0/multi-checkout@v2
        with:
          repositories: ${{ toJSON(matrix.mods) }}
          token: ${{ secrets.token }}
      - name: "Move mods"
        run: ./movemods.sh
      - name: "Prepare test"
        run: ./tests/techtree/pre-process.sh
      - name: "TEST: Tech Tree Verification"
        uses: ShadowGlass0/factorio-docker-for-github-actions@main
      - name: "Test Results"
        run: ./tests/techtree/post-process.sh

